CREATE TABLE "code_types"(id INTEGER PRIMARY KEY, type TEXT, UNIQUE(type) ON CONFLICT IGNORE);
CREATE TABLE items(id INTEGER PRIMARY KEY, short_desc TEXT, desc TEXT, parent INTEGER, FOREIGN KEY(parent) REFERENCES items);
CREATE TABLE codes(id INTEGER PRIMARY KEY, code TEXT, code_type INTEGER, parent INTEGER, item INTEGER, UNIQUE(code) ON CONFLICT IGNORE, FOREIGN KEY(code_type) REFERENCES "code_types"(id), FOREIGN KEY(parent) REFERENCES codes(id), FOREIGN KEY(item) REFERENCES items(id));
CREATE TABLE locations(id INTEGER PRIMARY KEY, short_name TEXT, full_name TEXT, parent INTEGER, UNIQUE(short_name) ON CONFLICT IGNORE, UNIQUE(full_name) ON CONFLICT IGNORE, FOREIGN KEY(parent) REFERENCES locations(id));
CREATE TABLE inventory(id INTEGER PRIMARY KEY, item INTEGER, location INTEGER, FOREIGN KEY(item) REFERENCES items(id), FOREIGN KEY(location) REFERENCES locations(id));
CREATE TABLE scans(id INTEGER PRIMARY KEY, code TEXT, source INTEGER, claimed BOOLEAN NOT NULL DEFAULT 0, date_added DATETIME DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE tags(id INTEGER PRIMARY KEY, tag TEXT, UNIQUE(tag COLLATE NOCASE) ON CONFLICT IGNORE);
CREATE TABLE items_tags(id INTEGER PRIMARY KEY, item INTEGER, tag INTEGER, UNIQUE(item, tag) ON CONFLICT IGNORE, FOREIGN KEY(item) REFERENCES items(id) ON DELETE CASCADE, FOREIGN KEY(tag) REFERENCES tags(id) ON DELETE CASCADE);
